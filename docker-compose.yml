version: '3.7'

services:
  postgres:
    container_name: postgres
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=selfimprovement123
      - POSTGRES_DB=postgres
    ports:
      - 5432:5432
    logging:
      options:
        max-size: 10m
        max-file: "3"

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@selfimprovement.ai
      - PGADMIN_DEFAULT_PASSWORD=selfimprovement123
    ports:
      - "5050:80"

  nginx:
    container_name: nginx
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./Nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./Nginx/index.html:/usr/share/nginx/html/index.html

  identity:
    container_name: selfimprovement-identity
    build:
      context: ./Source
      dockerfile: IdentityApi/Dockerfile.local
    environment:
      - ConnectionStrings__SelfImprovementDbContext=Server=Host=postgres;Port=5432;Database=SelfImprovementDb;User ID=admin;Password=selfimprovement123;Include Error Detail=true
      - CorsOrigin=http://localhost:3000
    ports:
      - "8080:8080"
      - "8081:8081"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M
    restart: always

  goal:
    container_name: selfimprovement-goal
    build:
      context: ./Source
      dockerfile: GoalApi/Dockerfile.local
    environment:
      - ConnectionStrings__SelfImprovementDbContext=Server=Host=postgres;Port=5432;Database=SelfImprovementDb;User ID=admin;Password=selfimprovement123;Include Error Detail=true
      - CorsOrigin=http://localhost:3000
    ports:
      - "8084:8084"
      - "8085:8085"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M
    restart: always

  prompt:
    container_name: selfimprovement-prompt
    build:
      context: ./Source
      dockerfile: PromptApi/Dockerfile.local
    environment:
      - ConnectionStrings__SelfImprovementDbContext=Server=Host=postgres;Port=5432;Database=SelfImprovementDb;User ID=admin;Password=selfimprovement123;Include Error Detail=true
      - CorsOrigin=http://localhost:3000
    ports:
      - "8082:8082"
      - "8083:8083"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M
    restart: always

  open-webui:
    container_name: open-webui
    build:
      context: ./Ollama
      dockerfile: Dockerfile
    ports:
      - "3001:8080"
    volumes:
      - open-webui:/app/backend/data
    restart: always

  mailhog:
    container_name: mailhog
    build:
      context: ./Mail
      dockerfile: Dockerfile
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: always

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    user: "1000"
    volumes:
      - ./Monitoring/Grafana/lib:/var/lib/grafana
    ports:
      - "3002:3000"
    restart: unless-stopped

  loki:
    container_name: loki
    image: grafana/loki:latest
    volumes:
      - ./Monitoring/Loki:/etc/loki
    ports:
      - "3100:3100"
    restart: unless-stopped
    command: -config.file=/etc/loki/loki-config.yml

  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    volumes:
      - ./Monitoring/Promtail:/etc/promtail
    restart: unless-stopped
    command: -config.expand-env=true -config.file=/etc/promtail/promtail-config.yml

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./Monitoring/Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter
    ports:
      - "9100:9100"
    restart: unless-stopped

volumes:
  open-webui:
